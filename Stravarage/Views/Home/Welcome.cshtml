@model Stravarage.Models.Athlete

@{
    ViewBag.Title = "Welcome";
}

@section header{
    <div class="pull-left" style="color:white;font-size:2em">
        Welcome @Html.DisplayFor(model => model.FirstName)!
    </div>
    <div id="div_api_requests" class="pull-right">
        <span style="color:white">Strava Api Requests: </span><span class="label label-default" id="lbl_requests_last_15"></span>&nbsp;<span class="label label-default" id="lbl_requests_today"></span>
    </div>
}

@*<strong>Id:</strong> @Html.DisplayFor(model => model.Id) <br />*@


<strong>Starred Segments:</strong> @Html.DropDownListFor(model => model.StarredSegments,
                         new SelectList(Model.StarredSegments, "Id", "Name"),
                         " - select segment - ",
                         new { id = "ddlStarredSegments" })
<br />
<strong>Your PR:</strong>   <img src="~/Images/waiting.gif" id="waitingGifPR" class="invisible" /><span id="lblPR"></span><br />
<strong>Mean PR:</strong>   <img src="~/Images/waiting.gif" id="waitingGifAvg" class="invisible" /><span id="lblAvgPR"></span><br />
<span class="hidden"><strong>Mode PR:</strong>   <img src="~/Images/waiting.gif" id="waitingGifMode" class="invisible" /><span id="lblModePR"></span><br /></span>
<strong>Std. Dev:</strong>  <img src="~/Images/waiting.gif" id="waitingGifStdDev" class="invisible" /><span id="lblStdDev"></span><br />
<strong>KOM:</strong>        <img src="~/Images/waiting.gif" id="waitingGifKOM" class="invisible" /><span id="lblKOM"></span><br />
<strong># Efforts:</strong>  <img src="~/Images/waiting.gif" id="waitingGifNumEfforts" class="invisible" /><span id="lblNumEfforts"></span><br />
<div>
    <input type="radio" id="rdo_percentile" name="display_lines" checked /><label for="rdo_percentile">Percentile</label>
    <input type="radio" id="rdo_std" name="display_lines" /><label for="rdo_std">Std. Dev.</label>
</div>

<canvas id="canvasPR" width="1200" height="500" style="border:1px dotted;"></canvas>

<script type="text/javascript" src="~/Scripts/Stravarage/StravarageAPI.js"></script>
<script type="text/javascript" src="~/Scripts/Stravarage/StatGraph.js"></script>

<script type="text/javascript">

    $(document).ready(

        function () {
            var proxy = new StravarageAPI()
            var currentSegment, currentLeaderboard;

            $('input[name="display_lines"]').change(function () {
                var graph = new StatGraph(currentSegment, currentLeaderboard, $('#rdo_std').prop('checked'));
            })

            $("#ddlStarredSegments").change(
                function () {
                    $("#lblAvgPR").html("");
                    $("#lblPR").html("");
                    $("#lblStdDev").html("");
                    $("#lblKOM").html("");
                    $("#lblModePR").html("");
                    $("#lblNumEfforts").html("");

                    $("#waitingGifPR, #waitingGifAvg, #waitingGifStdDev, #waitingGifKOM, #waitingGifMode, #waitingGifNumEfforts").removeClass("invisible");


                    var proxy = new StravarageAPI();

                    proxy.getSegment($("#ddlStarredSegments").val(),
                        function (segment) {

                            currentSegment = segment;

                            proxy.getLeaderboard($("#ddlStarredSegments").val(),
                                function (segmentEfforts) {

                                    currentLeaderboard = segmentEfforts;

                                    var graph = new StatGraph(segment, segmentEfforts, $('#rdo_std').prop('checked'));

                                    $("#waitingGifAvg, #waitingGifStdDev, #waitingGifKOM, #waitingGifPR, #waitingGifMode, #waitingGifNumEfforts").addClass("invisible");
                                    $("#lblPR").html(graph.yourTime());
                                    $("#lblAvgPR").html(graph.meanTime());
                                    $("#lblStdDev").html(graph.standardDeviation());
                                    $("#lblKOM").html(graph.minTime());
                                    $("#lblModePR").html(graph.modeTime());
                                    $("#lblNumEfforts").html(graph.numEfforts());

                                })
                        });

                }
            )

            setInterval(function () {
                proxy.getRequestCount(function (data) {
                    $('#lbl_requests_last_15').text(data.requests_last_15);
                    $('#lbl_requests_today').text(data.requests_today);

                    if (data.requests_last_15 > 500) {
                        $('#lbl_requests_last_15').addClass('label-warning');
                    }
                    else if (data.requests_last_15 > 599) {
                        $('#lbl_requests_last_15').addClass('label-danger');
                    }
                    else {
                        $('#lbl_requests_last_15').removeClass('label-danger').removeClass('label-warning');
                    }
                });
            }, 2000);


        }

    );



</script>